version: '3.8'

services:
  # Redis for caching and job queue
  redis:
    image: redis:7-alpine
    container_name: yt-mp3-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: >
      redis-server 
      --appendonly yes 
      --maxmemory 2gb 
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: yt-mp3-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAX_WORKERS=4
      - MAX_CONCURRENT_JOBS=10
      - MAX_CACHE_SIZE=1000
      - CACHE_TTL=3600000
      - DOWNLOADS_DIR=/app/downloads
      - CACHE_DIR=/app/cache
      - TEMP_DIR=/app/temp
      - MAX_FILE_AGE_HOURS=24
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=20
    volumes:
      - ./downloads:/app/downloads
      - ./cache:/app/cache
      - ./temp:/app/temp
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend service
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: yt-mp3-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local

networks:
  default:
    driver: bridge

