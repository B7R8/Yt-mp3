server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Prevent source code inspection
    add_header X-Source-Map "none" always;
    add_header X-DevTools-Override "none" always;

    # Static assets with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }

    # API routes - proxy to backend
    location /api/ {
        proxy_pass http://backend:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Block common dev tools paths
    location ~* /(devtools|inspect|debugger|console|source) {
        return 404;
    }
    
    # Block source map requests
    location ~* \.map$ {
        return 404;
    }

    # Handle client-side routing
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache HTML for short time
        expires 5m;
        add_header Cache-Control "public, must-revalidate";
    }

    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Error pages - redirect to index.html for SPA routing
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;
    
    # Custom 404 handling for API routes
    location ~ ^/api/ {
        # API routes should return proper 404 JSON
        error_page 404 = @api_not_found;
    }
    
    location @api_not_found {
        add_header Content-Type application/json;
        return 404 '{"error": "API endpoint not found", "status": 404}';
    }
    
    # ===================================================================
    # ===> SOURCE CODE PROTECTION <===
    # ===================================================================
    
    # Block common dev tools paths
    location ~* /(devtools|inspect|debugger|console|source) {
        return 404;
    }

    # Block source map requests
    location ~* \.map$ {
        return 404;
    }
    
    # Block access to source files
    location ~* \.(ts|tsx|jsx|js\.map|css\.map)$ {
        return 404;
    }
    
    # Block access to development files
    location ~* \.(config|env|json)$ {
        return 404;
    }
    
    # Block access to node_modules
    location ~* /node_modules/ {
        return 404;
    }
    
    # Block access to src directory
    location ~* /src/ {
        return 404;
    }
    
    # Block access to package files
    location ~* /(package\.json|package-lock\.json|yarn\.lock|tsconfig\.json|vite\.config\.ts)$ {
        return 404;
    }
    
    # Block access to git files
    location ~* /\.git/ {
        return 404;
    }
    
    # Block access to editor files
    location ~* /\.(vscode|idea|sublime)/ {
        return 404;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

