services:
  postgres:
    image: postgres:15-alpine
    container_name: yt-mp3-postgres
    environment:
      - POSTGRES_DB=youtube_converter
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${DB_PORT:-5432}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-youtube_converter}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M


  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    user: "0:0"  # Run as root to fix permissions
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=youtube_converter
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_TYPE=postgres
      - PORT=${PORT:-3001}
      - MAX_WORKERS=${MAX_WORKERS:-8}
      - MAX_CONCURRENT_JOBS=${MAX_CONCURRENT_JOBS:-20}
      - HIDE_SERVER_INFO=${HIDE_SERVER_INFO:-true}
      - SECURE_HEADERS=${SECURE_HEADERS:-true}
      - RAPIDAPI_KEY=${RAPIDAPI_KEY:-546e353d67msha411dc0cd0b0b7dp153e93jsn651c16a2c85b}
      - RAPIDAPI_KEY2=${RAPIDAPI_KEY2:-}
      - RAPIDAPI_KEY3=${RAPIDAPI_KEY3:-}
      - RAPIDAPI_KEY4=${RAPIDAPI_KEY4:-}
      - RAPIDAPI_KEY5=${RAPIDAPI_KEY5:-}
    volumes:
      - ./downloads:/app/downloads:rw
      - ./cache:/app/cache:rw
      - ./temp:/app/temp:rw
      - ./logs:/app/logs:rw
      - /tmp/app-media:/tmp/app-media:rw
      - ./backend/migrations:/app/migrations:ro
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3001/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1.5'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    networks:
      - app-network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - VITE_API_URL=${VITE_API_URL:-https://saveytb.com/api}
      - VITE_APP_NAME=${VITE_APP_NAME:-YouTube to MP3 Converter}
      - VITE_APP_VERSION=${VITE_APP_VERSION:-1.0.0}
      - DISABLE_SOURCE_MAPS=${DISABLE_SOURCE_MAPS:-true}
      - SECURE_HEADERS=${SECURE_HEADERS:-true}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: yt-mp3-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-simple.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl
      - ./frontend/dist:/usr/share/nginx/html/dist
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 60s
      timeout: 10s
      retries: 3
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M


volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

 